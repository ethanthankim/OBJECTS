{"ast":null,"code":"var _jsxFileName = \"/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Details.jsx\",\n  _s = $RefreshSig$();\n// Filename - Details.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Details(props) {\n  _s();\n  function findSelected(objArray) {\n    for (let i = 0; i < objArray.length; i++) {\n      if (objArray[i].isSelected) {\n        return objArray[i];\n      }\n    }\n  }\n  const selected = findSelected(props.objects);\n  const [fileContent, setFileContent] = useState('');\n  useEffect(() => {\n    fetch(`/stories/${selected.story}`).then(response => response.text()).then(data => setFileContent(data)).catch(error => console.error('Error fetching file:', error));\n  }, []);\n  const paragraphs = fileContent.split(\"\\n\").map(para => {\n    console.log(para);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"story--paragraph\",\n      children: para\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"details\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"details--image\",\n      src: require(`../images/${selected.url}`),\n      alt: selected.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"details--headings\",\n      children: \"Quotes and Highlights\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: selected.quote\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"details--story\",\n      children: paragraphs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(Details, \"KsTCZa9K9DzxKWB0HCc09FZZm8w=\");\n_c = Details;\nvar _c;\n$RefreshReg$(_c, \"Details\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Details","props","_s","findSelected","objArray","i","length","isSelected","selected","objects","fileContent","setFileContent","fetch","story","then","response","text","data","catch","error","console","paragraphs","split","map","para","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","require","url","alt","label","quote","_c","$RefreshReg$"],"sources":["/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Details.jsx"],"sourcesContent":["// Filename - Details.jsx\nimport React, { useEffect, useState } from \"react\"\n\nexport default function Details(props) {\n    function findSelected(objArray) {\n        for (let i = 0; i < objArray.length; i++) {\n            if (objArray[i].isSelected) {\n                return objArray[i]\n            }\n        }\n    }\n\n    const selected = findSelected(props.objects)\n   \n    const [fileContent, setFileContent] = useState('');\n\n    useEffect(() => {\n        fetch(`/stories/${selected.story}`)\n        .then((response) => response.text())\n        .then((data) => setFileContent(data))\n        .catch((error) => console.error('Error fetching file:', error));\n    }, []);\n\n    const paragraphs = fileContent.split(\"\\n\").map(para =>{\n        console.log(para)\n        return (<p className=\"story--paragraph\">{para}</p>)\n    })\n\n    return (\n        <div className=\"details\">\n            <img \n                className=\"details--image\"\n                src={require(`../images/${selected.url}`)} \n                alt={selected.label} \n            />\n            <h3 className=\"details--headings\">Quotes and Highlights</h3>\n            <p>{selected.quote}</p>\n            <section className=\"details--story\">\n                {paragraphs}\n            </section>\n        </div>\n    )\n}"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAElD,eAAe,SAASC,OAAOA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnC,SAASC,YAAYA,CAACC,QAAQ,EAAE;IAC5B,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,QAAQ,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MACtC,IAAID,QAAQ,CAACC,CAAC,CAAC,CAACE,UAAU,EAAE;QACxB,OAAOH,QAAQ,CAACC,CAAC,CAAC;MACtB;IACJ;EACJ;EAEA,MAAMG,QAAQ,GAAGL,YAAY,CAACF,KAAK,CAACQ,OAAO,CAAC;EAE5C,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElDD,SAAS,CAAC,MAAM;IACZgB,KAAK,CAAC,YAAYJ,QAAQ,CAACK,KAAK,EAAE,CAAC,CAClCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKN,cAAc,CAACM,IAAI,CAAC,CAAC,CACpCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,UAAU,GAAGX,WAAW,CAACY,KAAK,CAAC,IAAI,CAAC,CAACC,GAAG,CAACC,IAAI,IAAG;IAClDJ,OAAO,CAACK,GAAG,CAACD,IAAI,CAAC;IACjB,oBAAQzB,OAAA;MAAG2B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAAEH;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACtD,CAAC,CAAC;EAEF,oBACIhC,OAAA;IAAK2B,SAAS,EAAC,SAAS;IAAAC,QAAA,gBACpB5B,OAAA;MACI2B,SAAS,EAAC,gBAAgB;MAC1BM,GAAG,EAAEC,OAAO,CAAC,aAAazB,QAAQ,CAAC0B,GAAG,EAAE,CAAE;MAC1CC,GAAG,EAAE3B,QAAQ,CAAC4B;IAAM;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACFhC,OAAA;MAAI2B,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAC;IAAqB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5DhC,OAAA;MAAA4B,QAAA,EAAInB,QAAQ,CAAC6B;IAAK;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhC,OAAA;MAAS2B,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC9BN;IAAU;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEd;AAAC7B,EAAA,CAvCuBF,OAAO;AAAAsC,EAAA,GAAPtC,OAAO;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}