{"ast":null,"code":"var _jsxFileName = \"/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preloader() {\n  _s();\n  const navigate = useNavigate();\n  const message = \"What objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n  let i = 0;\n  let j = typewriterText.length;\n  function typeWriter() {\n    if (i < typewriterText.length) {\n      console.log(typewriterText);\n      setTypewriterText(prevText => {\n        let newText = prevText + message[i];\n        i++;\n        return newText;\n      });\n      setTimeout(typeWriter, 100); // Adjust typing speed here\n    }\n    // else {\n    //     setTimeout(deleteText, 2000); // Wait before starting to delete text\n    // }\n  }\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      navigate('/home');\n    }, 3000); // Change the duration as needed\n\n    return () => clearTimeout(timer);\n  }, [navigate]);\n\n  // Function to start the typewriter effect and play the sound\n  window.addEventListener('load', () => {\n    // Try to play the sound after a short delay\n    setTimeout(() => {\n      // typewriterSound.play().catch(error => {\n      //     console.log('Playback prevented:', error);\n      // });\n      typeWriter();\n    }, 100); // Adjust delay as needed\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preloader\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: typewriterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n_s(Preloader, \"gAaFPu0h+Ap2dVRtmkBULhso9dk=\", false, function () {\n  return [useNavigate];\n});\n_c = Preloader;\nexport default Preloader;\nvar _c;\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Preloader","_s","navigate","message","typewriterText","setTypewriterText","i","j","length","typeWriter","console","log","prevText","newText","setTimeout","timer","clearTimeout","window","addEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Preloader() {\n    const navigate = useNavigate();\n    const message = \"What objects hold meaning to you?\"\n    const [typewriterText, setTypewriterText] = useState(\"\");\n    let i = 0;\n    let j = typewriterText.length;\n\n    function typeWriter() {\n        if (i < typewriterText.length) {\n            console.log(typewriterText)\n            setTypewriterText(prevText => {\n                let newText = prevText + message[i]\n                i++\n                return newText \n            })\n            setTimeout(typeWriter, 100); // Adjust typing speed here\n        } \n        // else {\n        //     setTimeout(deleteText, 2000); // Wait before starting to delete text\n        // }\n    }\n\n    useEffect(() => {\n        const timer = setTimeout(() => {\n        navigate('/home');\n        }, 3000); // Change the duration as needed\n\n        return () => clearTimeout(timer);\n    }, [navigate]);\n\n    // Function to start the typewriter effect and play the sound\n    window.addEventListener('load', () => {\n        // Try to play the sound after a short delay\n        setTimeout(() => {\n            // typewriterSound.play().catch(error => {\n            //     console.log('Playback prevented:', error);\n            // });\n            typeWriter();\n        }, 100); // Adjust delay as needed\n    });\n\n    return (\n        <div className=\"preloader\">\n        <h1>{typewriterText}</h1>\n        {/* You can add more styling or a spinner here */}\n        </div>\n    );\n}\n\nexport default Preloader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,OAAO,GAAG,mCAAmC;EACnD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxD,IAAIU,CAAC,GAAG,CAAC;EACT,IAAIC,CAAC,GAAGH,cAAc,CAACI,MAAM;EAE7B,SAASC,UAAUA,CAAA,EAAG;IAClB,IAAIH,CAAC,GAAGF,cAAc,CAACI,MAAM,EAAE;MAC3BE,OAAO,CAACC,GAAG,CAACP,cAAc,CAAC;MAC3BC,iBAAiB,CAACO,QAAQ,IAAI;QAC1B,IAAIC,OAAO,GAAGD,QAAQ,GAAGT,OAAO,CAACG,CAAC,CAAC;QACnCA,CAAC,EAAE;QACH,OAAOO,OAAO;MAClB,CAAC,CAAC;MACFC,UAAU,CAACL,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;IACjC;IACA;IACA;IACA;EACJ;EAEAd,SAAS,CAAC,MAAM;IACZ,MAAMoB,KAAK,GAAGD,UAAU,CAAC,MAAM;MAC/BZ,QAAQ,CAAC,OAAO,CAAC;IACjB,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;;IAEV,OAAO,MAAMc,YAAY,CAACD,KAAK,CAAC;EACpC,CAAC,EAAE,CAACb,QAAQ,CAAC,CAAC;;EAEd;EACAe,MAAM,CAACC,gBAAgB,CAAC,MAAM,EAAE,MAAM;IAClC;IACAJ,UAAU,CAAC,MAAM;MACb;MACA;MACA;MACAL,UAAU,CAAC,CAAC;IAChB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;EACb,CAAC,CAAC;EAEF,oBACIV,OAAA;IAAKoB,SAAS,EAAC,WAAW;IAAAC,QAAA,eAC1BrB,OAAA;MAAAqB,QAAA,EAAKhB;IAAc;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEpB,CAAC;AAEd;AAACvB,EAAA,CA/CQD,SAAS;EAAA,QACGH,WAAW;AAAA;AAAA4B,EAAA,GADvBzB,SAAS;AAiDlB,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}