{"ast":null,"code":"var _jsxFileName = \"/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preloader() {\n  _s();\n  const navigate = useNavigate();\n  const message = \"Whhat objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n  const indexRef = useRef(0);\n  const typingDone = useRef(false);\n  useEffect(() => {\n    const typeWriter = () => {\n      console.log(indexRef.current, message[indexRef.current]);\n      if (indexRef.current < message.length) {\n        setTypewriterText(prevText => prevText + message[indexRef.current]);\n        indexRef.current += 1;\n      } else {\n        clearInterval(typingIntervalId);\n        // Set a timeout for a brief pause before starting the delete effect\n        setTimeout(() => {\n          typingDone.current = true;\n          indexRef.current = message.length - 1;\n          deletingIntervalId = setInterval(deleteWriter, 100); // Start the delete effect\n        }, 500); // Pause duration after typing completes\n      }\n    };\n    const deleteWriter = () => {\n      if (indexRef.current > 0) {\n        setTypewriterText(prevText => prevText.slice(0, -1));\n        indexRef.current -= 1;\n      } else {\n        clearInterval(deletingIntervalId);\n        // Navigate to home after the text is fully deleted\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // Adjust the delay after deleting completes\n      }\n    };\n    let typingIntervalId = setInterval(typeWriter, 100); // Adjust typing speed here\n    let deletingIntervalId;\n    return () => {\n      clearInterval(typingIntervalId);\n      clearInterval(deletingIntervalId);\n    };\n  }, [message, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preloader\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: typewriterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(Preloader, \"e+Gt1fKvZTmnNd+dJtqZTcHgbVI=\", false, function () {\n  return [useNavigate];\n});\n_c = Preloader;\nexport default Preloader;\nvar _c;\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Preloader","_s","navigate","message","typewriterText","setTypewriterText","indexRef","typingDone","typeWriter","console","log","current","length","prevText","clearInterval","typingIntervalId","setTimeout","deletingIntervalId","setInterval","deleteWriter","slice","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Preloader() {\n  const navigate = useNavigate();\n  const message = \"Whhat objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n  const indexRef = useRef(0);\n  const typingDone = useRef(false);\n\n  useEffect(() => {\n    const typeWriter = () => {\n        console.log(indexRef.current, message[indexRef.current])\n      if (indexRef.current < message.length) {\n        setTypewriterText(prevText => prevText + message[indexRef.current]);\n        indexRef.current += 1;\n      } else {\n        clearInterval(typingIntervalId);\n        // Set a timeout for a brief pause before starting the delete effect\n        setTimeout(() => {\n          typingDone.current = true;\n          indexRef.current = message.length - 1;\n          deletingIntervalId = setInterval(deleteWriter, 100); // Start the delete effect\n        }, 500); // Pause duration after typing completes\n      }\n    };\n\n    const deleteWriter = () => {\n      if (indexRef.current > 0) {\n        setTypewriterText(prevText => prevText.slice(0, -1));\n        indexRef.current -= 1;\n      } else {\n        clearInterval(deletingIntervalId);\n        // Navigate to home after the text is fully deleted\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // Adjust the delay after deleting completes\n      }\n    };\n\n    let typingIntervalId = setInterval(typeWriter, 100); // Adjust typing speed here\n    let deletingIntervalId;\n\n    return () => {\n      clearInterval(typingIntervalId);\n      clearInterval(deletingIntervalId);\n    };\n  }, [message, navigate]);\n\n  return (\n    <div className=\"preloader\">\n      <h1>{typewriterText}</h1>\n      {/* You can add more styling or a spinner here */}\n    </div>\n  );\n}\n\nexport default Preloader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,OAAO,GAAG,oCAAoC;EACpD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMW,QAAQ,GAAGV,MAAM,CAAC,CAAC,CAAC;EAC1B,MAAMW,UAAU,GAAGX,MAAM,CAAC,KAAK,CAAC;EAEhCF,SAAS,CAAC,MAAM;IACd,MAAMc,UAAU,GAAGA,CAAA,KAAM;MACrBC,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAACK,OAAO,EAAER,OAAO,CAACG,QAAQ,CAACK,OAAO,CAAC,CAAC;MAC1D,IAAIL,QAAQ,CAACK,OAAO,GAAGR,OAAO,CAACS,MAAM,EAAE;QACrCP,iBAAiB,CAACQ,QAAQ,IAAIA,QAAQ,GAAGV,OAAO,CAACG,QAAQ,CAACK,OAAO,CAAC,CAAC;QACnEL,QAAQ,CAACK,OAAO,IAAI,CAAC;MACvB,CAAC,MAAM;QACLG,aAAa,CAACC,gBAAgB,CAAC;QAC/B;QACAC,UAAU,CAAC,MAAM;UACfT,UAAU,CAACI,OAAO,GAAG,IAAI;UACzBL,QAAQ,CAACK,OAAO,GAAGR,OAAO,CAACS,MAAM,GAAG,CAAC;UACrCK,kBAAkB,GAAGC,WAAW,CAACC,YAAY,EAAE,GAAG,CAAC,CAAC,CAAC;QACvD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF,CAAC;IAED,MAAMA,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIb,QAAQ,CAACK,OAAO,GAAG,CAAC,EAAE;QACxBN,iBAAiB,CAACQ,QAAQ,IAAIA,QAAQ,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpDd,QAAQ,CAACK,OAAO,IAAI,CAAC;MACvB,CAAC,MAAM;QACLG,aAAa,CAACG,kBAAkB,CAAC;QACjC;QACAD,UAAU,CAAC,MAAM;UACfd,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF,CAAC;IAED,IAAIa,gBAAgB,GAAGG,WAAW,CAACV,UAAU,EAAE,GAAG,CAAC,CAAC,CAAC;IACrD,IAAIS,kBAAkB;IAEtB,OAAO,MAAM;MACXH,aAAa,CAACC,gBAAgB,CAAC;MAC/BD,aAAa,CAACG,kBAAkB,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,CAACd,OAAO,EAAED,QAAQ,CAAC,CAAC;EAEvB,oBACEH,OAAA;IAAKsB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBvB,OAAA;MAAAuB,QAAA,EAAKlB;IAAc;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEV;AAACzB,EAAA,CApDQD,SAAS;EAAA,QACCH,WAAW;AAAA;AAAA8B,EAAA,GADrB3B,SAAS;AAsDlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}