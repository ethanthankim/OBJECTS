{"ast":null,"code":"var _jsxFileName = \"/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preloader() {\n  _s();\n  const navigate = useNavigate();\n  const message = \"What objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n  useEffect(() => {\n    let i = 0;\n    const intervalId = setInterval(() => {\n      if (i < message.length) {\n        setTypewriterText(prevText => prevText + message[i]);\n        i++;\n      } else {\n        clearInterval(intervalId);\n        // Navigate to home after the message is fully typed\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // Adjust the delay after typing completes\n      }\n    }, 100); // Adjust typing speed here\n\n    return () => clearInterval(intervalId);\n  }, [message, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preloader\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: typewriterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Preloader, \"gAaFPu0h+Ap2dVRtmkBULhso9dk=\", false, function () {\n  return [useNavigate];\n});\n_c = Preloader;\nexport default Preloader;\nvar _c;\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"names":["React","useEffect","useState","useNavigate","jsxDEV","_jsxDEV","Preloader","_s","navigate","message","typewriterText","setTypewriterText","i","intervalId","setInterval","length","prevText","clearInterval","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Preloader() {\n  const navigate = useNavigate();\n  const message = \"What objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n\n  useEffect(() => {\n    let i = 0;\n    const intervalId = setInterval(() => {\n      if (i < message.length) {\n        setTypewriterText(prevText => prevText + message[i]);\n        i++;\n      } else {\n        clearInterval(intervalId);\n        // Navigate to home after the message is fully typed\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // Adjust the delay after typing completes\n      }\n    }, 100); // Adjust typing speed here\n\n    return () => clearInterval(intervalId);\n  }, [message, navigate]);\n\n  return (\n    <div className=\"preloader\">\n      <h1>{typewriterText}</h1>\n      {/* You can add more styling or a spinner here */}\n    </div>\n  );\n}\n\nexport default Preloader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,OAAO,GAAG,mCAAmC;EACnD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExDD,SAAS,CAAC,MAAM;IACd,IAAIW,CAAC,GAAG,CAAC;IACT,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAM;MACnC,IAAIF,CAAC,GAAGH,OAAO,CAACM,MAAM,EAAE;QACtBJ,iBAAiB,CAACK,QAAQ,IAAIA,QAAQ,GAAGP,OAAO,CAACG,CAAC,CAAC,CAAC;QACpDA,CAAC,EAAE;MACL,CAAC,MAAM;QACLK,aAAa,CAACJ,UAAU,CAAC;QACzB;QACAK,UAAU,CAAC,MAAM;UACfV,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;;IAET,OAAO,MAAMS,aAAa,CAACJ,UAAU,CAAC;EACxC,CAAC,EAAE,CAACJ,OAAO,EAAED,QAAQ,CAAC,CAAC;EAEvB,oBACEH,OAAA;IAAKc,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBf,OAAA;MAAAe,QAAA,EAAKV;IAAc;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEV;AAACjB,EAAA,CA7BQD,SAAS;EAAA,QACCH,WAAW;AAAA;AAAAsB,EAAA,GADrBnB,SAAS;AA+BlB,eAAeA,SAAS;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}