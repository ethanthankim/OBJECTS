{"ast":null,"code":"var _jsxFileName = \"/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Preloader() {\n  _s();\n  const navigate = useNavigate();\n  const message = \"What objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n  const indexRef = useRef(0);\n  useEffect(() => {\n    let animationFrameId;\n    const typeWriter = () => {\n      if (indexRef.current < message.length) {\n        setTypewriterText(prevText => prevText + message[indexRef.current]);\n        indexRef.current += 1;\n        animationFrameId = requestAnimationFrame(typeWriter);\n      } else {\n        setTimeout(() => {\n          indexRef.current = message.length;\n          animationFrameId = requestAnimationFrame(deleteWriter);\n        }, 500); // Pause duration after typing completes\n      }\n    };\n    const deleteWriter = () => {\n      if (indexRef.current > 0) {\n        setTypewriterText(prevText => prevText.slice(0, -1));\n        indexRef.current -= 1;\n        animationFrameId = requestAnimationFrame(deleteWriter);\n      } else {\n        // Navigate to home after the text is fully deleted\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // Adjust the delay after deleting completes\n      }\n    };\n    animationFrameId = requestAnimationFrame(typeWriter);\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [message, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"preloader\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: typewriterText\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Preloader, \"VNX84pOvHPe8hjVd3UJvEat/22A=\", false, function () {\n  return [useNavigate];\n});\n_c = Preloader;\nexport default Preloader;\nvar _c;\n$RefreshReg$(_c, \"Preloader\");","map":{"version":3,"names":["React","useEffect","useState","useRef","useNavigate","jsxDEV","_jsxDEV","Preloader","_s","navigate","message","typewriterText","setTypewriterText","indexRef","animationFrameId","typeWriter","current","length","prevText","requestAnimationFrame","setTimeout","deleteWriter","slice","cancelAnimationFrame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ethankim/Documents/GitHub/OBJECTS/src/components/Preloader.jsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nfunction Preloader() {\n  const navigate = useNavigate();\n  const message = \"What objects hold meaning to you?\";\n  const [typewriterText, setTypewriterText] = useState(\"\");\n  const indexRef = useRef(0);\n\n  useEffect(() => {\n    let animationFrameId;\n\n    const typeWriter = () => {\n      if (indexRef.current < message.length) {\n        setTypewriterText(prevText => prevText + message[indexRef.current]);\n        indexRef.current += 1;\n        animationFrameId = requestAnimationFrame(typeWriter);\n      } else {\n        setTimeout(() => {\n          indexRef.current = message.length;\n          animationFrameId = requestAnimationFrame(deleteWriter);\n        }, 500); // Pause duration after typing completes\n      }\n    };\n\n    const deleteWriter = () => {\n      if (indexRef.current > 0) {\n        setTypewriterText(prevText => prevText.slice(0, -1));\n        indexRef.current -= 1;\n        animationFrameId = requestAnimationFrame(deleteWriter);\n      } else {\n        // Navigate to home after the text is fully deleted\n        setTimeout(() => {\n          navigate('/home');\n        }, 500); // Adjust the delay after deleting completes\n      }\n    };\n\n    animationFrameId = requestAnimationFrame(typeWriter);\n\n    return () => cancelAnimationFrame(animationFrameId);\n  }, [message, navigate]);\n\n  return (\n    <div className=\"preloader\">\n      <h1>{typewriterText}</h1>\n      {/* You can add more styling or a spinner here */}\n    </div>\n  );\n}\n\nexport default Preloader;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGL,WAAW,CAAC,CAAC;EAC9B,MAAMM,OAAO,GAAG,mCAAmC;EACnD,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAMW,QAAQ,GAAGV,MAAM,CAAC,CAAC,CAAC;EAE1BF,SAAS,CAAC,MAAM;IACd,IAAIa,gBAAgB;IAEpB,MAAMC,UAAU,GAAGA,CAAA,KAAM;MACvB,IAAIF,QAAQ,CAACG,OAAO,GAAGN,OAAO,CAACO,MAAM,EAAE;QACrCL,iBAAiB,CAACM,QAAQ,IAAIA,QAAQ,GAAGR,OAAO,CAACG,QAAQ,CAACG,OAAO,CAAC,CAAC;QACnEH,QAAQ,CAACG,OAAO,IAAI,CAAC;QACrBF,gBAAgB,GAAGK,qBAAqB,CAACJ,UAAU,CAAC;MACtD,CAAC,MAAM;QACLK,UAAU,CAAC,MAAM;UACfP,QAAQ,CAACG,OAAO,GAAGN,OAAO,CAACO,MAAM;UACjCH,gBAAgB,GAAGK,qBAAqB,CAACE,YAAY,CAAC;QACxD,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF,CAAC;IAED,MAAMA,YAAY,GAAGA,CAAA,KAAM;MACzB,IAAIR,QAAQ,CAACG,OAAO,GAAG,CAAC,EAAE;QACxBJ,iBAAiB,CAACM,QAAQ,IAAIA,QAAQ,CAACI,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QACpDT,QAAQ,CAACG,OAAO,IAAI,CAAC;QACrBF,gBAAgB,GAAGK,qBAAqB,CAACE,YAAY,CAAC;MACxD,CAAC,MAAM;QACL;QACAD,UAAU,CAAC,MAAM;UACfX,QAAQ,CAAC,OAAO,CAAC;QACnB,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;MACX;IACF,CAAC;IAEDK,gBAAgB,GAAGK,qBAAqB,CAACJ,UAAU,CAAC;IAEpD,OAAO,MAAMQ,oBAAoB,CAACT,gBAAgB,CAAC;EACrD,CAAC,EAAE,CAACJ,OAAO,EAAED,QAAQ,CAAC,CAAC;EAEvB,oBACEH,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,eACxBnB,OAAA;MAAAmB,QAAA,EAAKd;IAAc;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEtB,CAAC;AAEV;AAACrB,EAAA,CA9CQD,SAAS;EAAA,QACCH,WAAW;AAAA;AAAA0B,EAAA,GADrBvB,SAAS;AAgDlB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}